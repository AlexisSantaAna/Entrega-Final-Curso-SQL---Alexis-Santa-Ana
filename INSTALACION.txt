-- Schema
DROP SCHEMA IF EXISTS PREMIER_LEAGUE_DB;
CREATE SCHEMA IF NOT EXISTS PREMIER_LEAGUE_DB;
USE PREMIER_LEAGUE_DB;

-- Tablas
DROP TABLE IF EXISTS EQUIPO;
CREATE TABLE IF NOT EXISTS EQUIPO (
	ID_EQUIPO INT AUTO_INCREMENT,
    NOMBRE VARCHAR(30) NOT NULL,
    APODO VARCHAR (20),
    ID_CIUDAD INT NOT NULL,
    ID_ESTADIO INT NOT NULL,
    ID_ENTRENADOR INT NOT NULL,
    INDEX (ID_EQUIPO, ID_CIUDAD, ID_ENTRENADOR, ID_ESTADIO),
    PRIMARY KEY (ID_EQUIPO)
); 	

DROP TABLE IF EXISTS CIUDAD;
CREATE TABLE IF NOT EXISTS CIUDAD (
	ID_CIUDAD INT AUTO_INCREMENT,
    NOMBRE VARCHAR(30) UNIQUE,
    INDEX (ID_CIUDAD),
    PRIMARY KEY (ID_CIUDAD)
);

DROP TABLE IF EXISTS ENTRENADOR;
CREATE TABLE IF NOT EXISTS ENTRENADOR (
	ID_ENTRENADOR INT AUTO_INCREMENT,
    NOMBRE VARCHAR(30) NOT NULL,
    APELLIDO VARCHAR(30) NOT NULL,
    NACIONALIDAD VARCHAR(20),
    TITULOS_OBTENIDOS INT,
    INDEX (ID_ENTRENADOR, TITULOS_OBTENIDOS),
    PRIMARY KEY (ID_ENTRENADOR)
);

DROP TABLE IF EXISTS PARTIDO;
CREATE TABLE IF NOT EXISTS PARTIDO (
	ID_PARTIDO INT AUTO_INCREMENT,
    FECHA DATETIME,
    ID_EQUIPO_1 INT NOT NULL,
    ID_EQUIPO_2 INT NOT NULL,
    ID_ESTADIO INT NOT NULL,
    INDEX (ID_PARTIDO, ID_EQUIPO_1, ID_EQUIPO_2, ID_ESTADIO),
    PRIMARY KEY (ID_PARTIDO)
);

DROP TABLE IF EXISTS ESTADIO;
CREATE TABLE IF NOT EXISTS ESTADIO (
	ID_ESTADIO INT AUTO_INCREMENT,
    NOMBRE VARCHAR(30) NOT NULL,
    ID_CIUDAD INT NOT NULL,
    INDEX (ID_ESTADIO, ID_CIUDAD),
    PRIMARY KEY (ID_ESTADIO)
);

DROP TABLE IF EXISTS EQUIPO_JUGADOR;
CREATE TABLE IF NOT EXISTS EQUIPO_JUGADOR (
	ID_EQUIPO_JUGADOR INT AUTO_INCREMENT,
    NUMERO INT NOT NULL,
    ID_EQUIPO INT NOT NULL,
    ID_JUGADOR INT NOT NULL,
    INDEX (ID_EQUIPO_JUGADOR, ID_EQUIPO, ID_JUGADOR, NUMERO),
    PRIMARY KEY (ID_EQUIPO_JUGADOR)
);

DROP TABLE IF EXISTS JUGADOR;
CREATE TABLE IF NOT EXISTS JUGADOR (
	ID_JUGADOR INT AUTO_INCREMENT,
    NOMBRE VARCHAR(30) NOT NULL,
    APELLIDO VARCHAR(30) NOT NULL,
    NACIONALIDAD VARCHAR(30) NOT NULL,
    INDEX (ID_JUGADOR),
    PRIMARY KEY (ID_JUGADOR)
);

-- Foreign Keys
ALTER TABLE EQUIPO 
ADD FOREIGN KEY (ID_CIUDAD) REFERENCES CIUDAD(ID_CIUDAD), 
ADD FOREIGN KEY (ID_ESTADIO) REFERENCES ESTADIO(ID_ESTADIO), 
ADD FOREIGN KEY (ID_ENTRENADOR) REFERENCES ENTRENADOR(ID_ENTRENADOR);

ALTER TABLE PARTIDO
ADD FOREIGN KEY (ID_EQUIPO_1) REFERENCES EQUIPO(ID_EQUIPO), 
ADD FOREIGN KEY (ID_EQUIPO_2) REFERENCES EQUIPO(ID_EQUIPO), 
ADD FOREIGN KEY (ID_ESTADIO) REFERENCES ESTADIO (ID_ESTADIO);

ALTER TABLE ESTADIO
ADD FOREIGN KEY (ID_CIUDAD) REFERENCES CIUDAD(ID_CIUDAD);

ALTER TABLE EQUIPO_JUGADOR
ADD FOREIGN KEY (ID_EQUIPO) REFERENCES EQUIPO(ID_EQUIPO), 
ADD FOREIGN KEY (ID_JUGADOR) REFERENCES JUGADOR(ID_JUGADOR);

-- Tablas LOGS
DROP TABLE IF EXISTS LOG_EQUIPO;
CREATE TABLE IF NOT EXISTS LOG_EQUIPO (
	ID_LOG INT AUTO_INCREMENT,
    ACCION VARCHAR(30) NOT NULL,
    TABLA VARCHAR(30) NOT NULL,
    USUARIO VARCHAR(100) NOT NULL,
    FECHA DATE,
    HORA TIME,
    EQUIPO_NOMBRE VARCHAR(50) NOT NULL,
    ID_EQUIPO INT NOT NULL,
    PRIMARY KEY (ID_LOG)
);

DROP TABLE IF EXISTS LOG_JUGADOR;
CREATE TABLE IF NOT EXISTS LOG_JUGADOR (
	ID_LOG INT AUTO_INCREMENT,
    ACCION VARCHAR(30) NOT NULL,
    TABLA VARCHAR(30) NOT NULL,
    USUARIO VARCHAR(100),
    FECHA DATE,
    HORA TIME,
    OLDVALUE VARCHAR(100),
    NEWVALUE VARCHAR(100),
    PRIMARY KEY (ID_LOG)
);

-- Triggers
DROP TRIGGER IF EXISTS TRG_LOG_EQUIPO;
DELIMITER //
CREATE TRIGGER TRG_LOG_EQUIPO AFTER INSERT ON PREMIER_LEAGUE_DB.EQUIPO
FOR EACH ROW
BEGIN

INSERT INTO LOG_EQUIPO(ACCION, TABLA, USUARIO, FECHA, HORA, EQUIPO_NOMBRE, ID_EQUIPO)
VALUES ('INSERT', 'EQUIPO', CURRENT_USER(), DATE(NOW()), TIME(NOW()), NEW.NOMBRE, NEW.ID_EQUIPO);

END//
DELIMITER ;

DROP TRIGGER IF EXISTS TRG_LOG_JUGADOR;
DELIMITER //
CREATE TRIGGER TRG_LOG_JUGADOR BEFORE UPDATE ON PREMIER_LEAGUE_DB.JUGADOR
FOR EACH ROW
BEGIN

INSERT INTO LOG_JUGADOR(ACCION, TABLA, USUARIO, FECHA, HORA, OLDVALUE, NEWVALUE)
VALUES ('UPDATE', 'JUGADOR', CURRENT_USER(), DATE(NOW()), TIME(NOW()), CONCAT(OLD.NOMBRE, ' ', OLD.APELLIDO), CONCAT(NEW.NOMBRE, ' ', NEW.APELLIDO));

END//
DELIMITER ;

-- Registros
INSERT INTO JUGADOR(NOMBRE, APELLIDO, NACIONALIDAD)
VALUES 
('Bernardo', 'Silva', 'Portugues'),
('Kevin', 'De Bruyne', 'Belga'),
('Erling', 'Haaland', 'Noruego'),
('Julián', 'Alvarez', 'Argentino'),
('Bruno Miguel Borges', 'Fernandes', 'Portugues'),
('Marcus', 'Rashford', 'Ingles'),
('Mohamed', 'Salah', 'Egipcio'),
('Alexis', 'Mac Allister', 'Argentino'),
('Virgil', 'van Dijk', 'Neerlandes'),
('Cole', 'Palmer', 'Ingles'),
('Enzo', 'Fernandez', 'Argentino'),
('Moisés', 'Caicedo', 'Colombiano'),
('Bukayo', 'Saka', 'Ingles'),
('Martin', 'Ødegaard', 'Noruego'),
('Gabriel', 'Martinelli', 'Brasilero'),
('Emiliano', 'Martinez', 'Argentino'),
('Ollie', 'Watkins', 'Ingles'),
('Leon', 'Bailey', 'Jamaiquino'),
('Kaoru', 'Mitoma', 'Japones'),
('Julio', 'Enciso', 'Paraguayo'),
('Valentin', 'Barco', 'Argentino');

INSERT INTO CIUDAD(NOMBRE)
VALUES
('Manchester'),
('Londres'),
('Liverpool'),
('Birmingham'),
('Bristol'),
('Nottingham'),
('Brighton'),
('Newcastle upon Tyne'),
('Leicester'),
('Southampton'),
('Burnley'),
('Wolverhampton'),
('Brentford');

INSERT INTO ESTADIO(NOMBRE, ID_CIUDAD)
VALUES
('Etihad Stadium', 1),
('Old Trafford', 1),
('Stamford Bridge', 2),
('Anfield', 3),
('Villa Park', 4),
('Emirates Stadium', 2),
('Falmer Stadium', 7),
('The City Ground', 6),
('Goodinson Park', 3),
('Turf Moor', 11),
('King Power Stadium ', 9),
('St Marys Stadium', 10),
('Craven Cottage', 2),
('Amex Stadium', 7),
('Selhurst Park', 2),
('Tottenham Hotspur Stadium', 2),
('Molineux Stadium', 12),
('Brentford Community Stadium', 13),
('St James Park', 8);

INSERT INTO ENTRENADOR(NOMBRE, APELLIDO, NACIONALIDAD, TITULOS_OBTENIDOS)
VALUES
('Josep', 'Guardiola', 'Español', 37),
('Erik', 'ten Hag', 'Neerlandes', 8),
('Jürgen Norbert', 'Kloop', 'Aleman', 13),
('Mauricio Roberto', 'Pochettino', 'Argentino', 3),
('Mikel', 'Arteta', 'Español', 3),
('Unai', 'Emery', 'Español', 14),
('Thomas', 'Frank', 'Danes', 0),
('Roberto', 'De Zerbi', 'Italiano', 1),
('Vincent Jean Mpoy', 'Kompany', 'Belga', 1),
('Oliver', 'Glasner', 'Austriaco', 2),
('Sean', 'Dyche', 'Ingles', 1),
('Enzo', 'Maresca', 'Italiano', 1),
('Eddie', 'Howe', 'Ingles', 1),
('Ange', 'Postecoglou', 'Australiano', 13),
('Gary', 'Oneil', 'Ingles', 0);

INSERT INTO EQUIPO(NOMBRE, APODO, ID_CIUDAD, ID_ESTADIO, ID_ENTRENADOR)
VALUES
('Manchester City FC', 'The Citizens', 1, 1, 1),
('Manchester United FC', 'The Red Devils', 1, 2, 2),
('Liverpool FC', 'The Reds', 3, 4, 3),
('Chelsea FC', 'The Blues', 2, 3, 4),
('Arsenal FC', 'The Gunners', 2, 6, 5),
('Aston Villa FC', 'The Villans', 4, 5, 6),
('Brentford FC', 'The Bees', 2, 18, 7),
('Brighton & Hove Albion FC', 'The Seagulls', 7, 14, 8),
('Burnley FC', 'The Clarets', 11, 10, 9),
('Crystal Palace FC', 'The Eagles', 2, 15, 10),
('Everton', 'The Toffees', 3, 9, 11),
('Leicester City FC', 'The Foxes', 9, 11, 12),
('Newcastle United FC', 'The Magpies', 8, 19, 13),
('Tottenham Hotspur FC', 'Spurs', 2, 16, 14),
('Wolverhampton Wanderers FC', 'Wolves', 12, 17, 15);

INSERT INTO PARTIDO(FECHA, ID_EQUIPO_1, ID_EQUIPO_2, ID_ESTADIO)
VALUES
('2024-03-05 14:30:00', 1, 2, 1),
('2024-03-10 17:00:00', 3, 4, 4),
('2024-03-12 12:45:00', 5, 6, 5),
('2024-03-18 15:15:00', 1, 2, 2),
('2024-03-22 20:00:00', 3, 4, 3),
('2024-03-25 13:30:00', 5, 6, 6),
('2024-03-28 19:45:00', 1, 3, 1),
('2024-04-02 16:30:00', 2, 4, 2),
('2024-04-08 12:30:00', 3, 6, 4),
('2024-06-01 17:00:00', 8, 9, 14),
('2024-06-07 13:30:00', 9, 8, 10),
('2024-06-08 17:00:00', 13, 14, 16),
('2024-06-15 16:00:00', 14, 13, 19);

INSERT INTO EQUIPO_JUGADOR(NUMERO, ID_EQUIPO, ID_JUGADOR)
VALUES
(20, 1, 1),
(17, 1, 2),
(9, 1, 3),
(19, 1, 4),
(8, 2, 5),
(10, 2, 6),
(11, 3, 7),
(10, 3, 8),
(4, 3, 9),
(20, 4, 10),
(8, 4, 11),
(25, 4, 12),
(7, 5, 13),
(8, 5, 14),
(11, 5, 15),
(1, 6, 16),
(11, 6, 17),
(31, 6, 18),
(9, 8, 19),
(10, 8, 20),
(19, 8, 21);


-- VISTAS
DROP VIEW IF EXISTS VW_EQUIPO_CIUDAD;
CREATE VIEW VW_EQUIPO_CIUDAD AS
SELECT E.NOMBRE AS EQUIPO, C.NOMBRE AS CIUDAD
FROM EQUIPO E INNER JOIN CIUDAD C
ON E.ID_CIUDAD = C.ID_CIUDAD;

DROP VIEW IF EXISTS VW_EQUIPO_CANTIDAD_JUGADORES;
CREATE VIEW VW_EQUIPO_CANTIDAD_JUGADORES AS
SELECT E.NOMBRE AS EQUIPO, COUNT(EJ.ID_JUGADOR) AS CANTIDAD_JUGADORES
FROM EQUIPO E
INNER JOIN EQUIPO_JUGADOR EJ ON E.ID_EQUIPO = EJ.ID_EQUIPO
INNER JOIN JUGADOR J ON EJ.ID_JUGADOR = J.ID_JUGADOR
GROUP BY E.NOMBRE;

DROP VIEW IF EXISTS VW_JUGADORES_NACIONALIDAD;
CREATE VIEW VW_JUGADORES_NACIONALIDAD AS
SELECT NACIONALIDAD, COUNT(*) AS CANTIDAD
FROM JUGADOR 
GROUP BY NACIONALIDAD ORDER BY CANTIDAD DESC;

DROP VIEW IF EXISTS VW_DETALLES_PARTIDOS;
CREATE VIEW VW_DETALLES_PARTIDOS AS
SELECT P.FECHA AS FECHA_ENCUENTRO, E1.NOMBRE AS EQUIPO_1 , E2.NOMBRE AS EQUIPO_2, ES.NOMBRE AS ESTADIO
FROM PARTIDO P 
INNER JOIN EQUIPO E1 ON P.ID_EQUIPO_1 = E1.ID_EQUIPO
INNER JOIN EQUIPO E2 ON P.ID_EQUIPO_2 = E2.ID_EQUIPO
INNER JOIN ESTADIO ES ON P.ID_ESTADIO = ES.ID_ESTADIO;

DROP VIEW IF EXISTS VW_ENTRENADORES_EQUIPOS;
CREATE VIEW VW_ENTRENADORES_EQUIPOS AS
SELECT CONCAT(EN.NOMBRE, ' ', EN.APELLIDO) AS ENTRENADOR, E.NOMBRE AS EQUIPO, EN.TITULOS_OBTENIDOS AS TROFEOS_TOTALES
FROM ENTRENADOR EN 
INNER JOIN EQUIPO E ON E.ID_ENTRENADOR = EN.ID_ENTRENADOR
ORDER BY EN.TITULOS_OBTENIDOS DESC;

-- FUNCIONES
DROP FUNCTION IF EXISTS FN_JUGADOR_RETORNAR;
DELIMITER //
CREATE FUNCTION FN_JUGADOR_RETORNAR (P_NOMBRE VARCHAR(30))
RETURNS VARCHAR(100)
DETERMINISTIC
BEGIN
DECLARE v_nombre_apellido VARCHAR(100);

SELECT CONCAT(NOMBRE, ' ', APELLIDO) INTO v_nombre_apellido
FROM JUGADOR WHERE NOMBRE LIKE CONCAT('%', P_NOMBRE, '%') OR APELLIDO LIKE CONCAT('%', P_NOMBRE, '%') LIMIT 1;

RETURN v_nombre_apellido;
END //
DELIMITER ;

DROP FUNCTION IF EXISTS FN_ESTADIO_CIUDAD;
DELIMITER //
CREATE FUNCTION FN_ESTADIO_CIUDAD (P_ID_ESTADIO INT)
RETURNS VARCHAR(100)
DETERMINISTIC
BEGIN
DECLARE v_estadio_ciudad VARCHAR(100);

SELECT CONCAT('Estadio: ', E.NOMBRE, ' Ciudad: ', C.NOMBRE) INTO v_estadio_ciudad
FROM ESTADIO E INNER JOIN CIUDAD C 
ON E.ID_CIUDAD = C.ID_CIUDAD
WHERE ID_ESTADIO = P_ID_ESTADIO LIMIT 1;

RETURN v_estadio_ciudad;
END //
DELIMITER ;

-- STORED PROCEDURES
DROP PROCEDURE IF EXISTS SP_LISTA_NOMBRES;
DELIMITER //
CREATE PROCEDURE SP_LISTA_NOMBRES (IN P_TABLA VARCHAR(30), OUT P_SALIDA VARCHAR(500))
BEGIN
    IF P_TABLA = 'EQUIPO' THEN
        SELECT GROUP_CONCAT(NOMBRE SEPARATOR ', ') FROM EQUIPO INTO P_SALIDA;
    ELSEIF P_TABLA = 'JUGADOR' THEN
        SELECT GROUP_CONCAT(NOMBRE SEPARATOR ', ') FROM JUGADOR INTO P_SALIDA;
	ELSEIF P_TABLA = 'CIUDAD' THEN
        SELECT GROUP_CONCAT(NOMBRE SEPARATOR ', ') FROM CIUDAD INTO P_SALIDA;
	ELSEIF P_TABLA = 'ENTRENADOR' THEN
        SELECT GROUP_CONCAT(NOMBRE SEPARATOR ', ') FROM ENTRENADOR INTO P_SALIDA;
	ELSEIF P_TABLA = 'ESTADIO' THEN
        SELECT GROUP_CONCAT(NOMBRE SEPARATOR ', ') FROM ESTADIO INTO P_SALIDA;
    ELSE
        SET P_SALIDA = 'ERROR: debes ingresar una tabla existente que contenga nombre como valor existente.';
    END IF;
END //
DELIMITER ;

DROP PROCEDURE IF EXISTS SP_INSERTAR_CIUDAD;
DELIMITER //
CREATE PROCEDURE SP_INSERTAR_CIUDAD (IN P_NOMBRE VARCHAR(30))
BEGIN
INSERT INTO ciudad(nombre) VALUES (P_NOMBRE);
END //
DELIMITER ;

-- DCL
use mysql ;

DROP USER IF EXISTS READONLY@LOCALHOST;
CREATE USER IF NOT EXISTS READONLY@LOCALHOST IDENTIFIED BY 'COOLPASSWORD';

DROP USER IF EXISTS HRDEPARTMENT@LOCALHOST;
CREATE USER IF NOT EXISTS HRDEPARTMENT@LOCALHOST IDENTIFIED BY 'SECUREPASSWORD';

GRANT SELECT ON *.* TO READONLY@LOCALHOST;
GRANT SELECT, INSERT, UPDATE ON *.* TO HRDEPARTMENT@LOCALHOST;
USE PREMIER_LEAGUE_DB;

-- TCL
SET AUTOCOMMIT = 0;
SET SQL_SAFE_UPDATES = 0;
SET FOREIGN_KEY_CHECKS = 0;
START TRANSACTION;
USE PREMIER_LEAGUE_DB;
DELETE FROM JUGADOR WHERE ID_JUGADOR IN (1, 2, 3, 4);
ROLLBACK;
-- COMMIT;

-- Reinserto los registros
/* INSERT INTO JUGADOR(ID_JUGADOR, NOMBRE, APELLIDO, NACIONALIDAD)
VALUES 
(1, 'Bernardo', 'Silva', 'Portugues'),
(2, 'Kevin', 'De Bruyne', 'Belga'),
(3, 'Erling', 'Haaland', 'Noruego'),
(4, 'Julián', 'Alvarez', 'Argentino'); */

START TRANSACTION;
INSERT INTO CIUDAD
VALUES
(14, 'Rosario'),
(15, 'Pérez'),
(16, 'Funes'),
(17, 'Roldán');
SAVEPOINT SP3;

INSERT INTO CIUDAD
VALUES
(18, 'Galvez'),
(19, 'San Lorenzo'),
(20, 'Timbues'),
(21, 'Fray Luis Beltran');
SAVEPOINT SP4;

-- SELECT * FROM CIUDAD ORDER BY ID_CIUDAD;
ROLLBACK;
-- COMMIT;
SET AUTOCOMMIT = 1;
SET FOREIGN_KEY_CHECKS = 1;
